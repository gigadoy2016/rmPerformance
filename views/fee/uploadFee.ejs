<!DOCTYPE html>
<html>
  <head>
    <title><%=title%></title>
    <link rel='stylesheet' href='../../css/mycss.css' />
    <script src="../../js/lib/xlsx.min.js"></script>
    <!-- <script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.17.5/xlsx.min.js"></script> -->
    <script>
      var URL = './uploadTrailing';
      // Method to upload a valid excel file
      var Data ={
        trailing: [],
        date : ''
      };

      function upload() {
        var files = document.getElementById('file_upload').files;
        if(files.length==0){
          alert("Please choose any file...");
          return;
        }
        var filename = files[0].name;
        var extension = filename.substring(filename.lastIndexOf(".")).toUpperCase();
        if (extension == '.XLS' || extension == '.XLSX') {
            //Here calling another method to read excel file into json
            excelFileToJSON(files[0]);
        }else{
            alert("Please select a valid excel file.");
        }
      }

      //Method to read excel file and convert it into JSON 
      function excelFileToJSON(file){
        try {
          var reader = new FileReader();
          reader.readAsBinaryString(file);
          reader.onload = function(e) {

              var data = e.target.result;
              var workbook = XLSX.read(data, {
                  type : 'binary'
              });
              var result = {};
              var firstSheetName = workbook.SheetNames[0];
              //reading only first sheet data
              var jsonData = XLSX.utils.sheet_to_json(workbook.Sheets[firstSheetName]);
              //displaying the json result into HTML table
              displayJsonToHtmlTable(jsonData);
              }
          }catch(e){
              console.error(e);
          }
      }

      function displayJsonToHtmlTable(jsonData){
        var table=document.getElementById("display_excel_data");
        jsonData.sort((a,b)=>{
          const A = a["ic_code"];
          const B = b["ic_code"];
          return A - B;
        });

        // console.log(jsonData);
        const tableBody = document.getElementById('data-table');

        jsonData.forEach(item => {
            const row = document.createElement('tr');
            Object.keys(item).forEach(key => {
                const cell = document.createElement('td');
                if (key === 'WCC' || key === 'RM') {
                    // Format WCC and RM values
                    cell.textContent = item[key].toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 });
                } else {
                    cell.textContent = item[key];
                }
                row.appendChild(cell);
            });
            tableBody.appendChild(row);
        });
        let date = new Date();
        date.setDate(date.getDate()-1);
        let dateValue = date.getFullYear()+"-"+(date.getMonth()+1)+"-"+date.getDate();
        document.getElementById("st_date").value = dateValue;

        Data.trailing = jsonData;
        Data.date = dateValue;
      }


      function getDate(txt){
        // แยกส่วนของวันที่และเวลา
        const parts = txt.split(" ");
        const dateParts = parts[0].split("/");
        const timeParts = parts[1].split(":");

        // สร้างวัตถุ Date โดยใช้ส่วนของวันที่และเวลา
        const year = parseInt(dateParts[2]);
        const month = parseInt(dateParts[1]) - 1;
        const day = parseInt(dateParts[0]);
        const hours = parseInt(timeParts[0]);
        const minutes = parseInt(timeParts[1]);

        const date = new Date(year, month, day, hours, minutes);
        return date;
      }

      async function sendData(){
        console.log(Data);
        try {
          const response = await fetch(URL, {
            method: 'POST', // ใช้ POST method
            headers: {
                'Content-Type': 'application/json' // กำหนด Content-Type เป็น JSON
              },
              body: JSON.stringify(Data) // แปลงข้อมูล JSON เป็น string ก่อนส่ง
            });

            // ตรวจสอบสถานะของคำขอ
            if (response.ok) {
              const result = await response.json();
              console.log('Response:', result);
            } else {
              console.error('Error:', response.status, response.statusText);
            }
          } catch (error) {
            console.error('Fetch error:', error);
        }
      }
    </script>
    <style>
      table {
          width: 100%;
          border-collapse: collapse;
      }
      th, td {
          border: 1px solid #ddd;
          padding: 8px;
          text-align: left;
      }
      th {
          background-color: #f2f2f2;
      }
      tr:nth-child(even) {
          background-color: #f9f9f9;
      }
      tr:hover {
          background-color: #f1f1f1;
      }
    </style>
  </head>
  <body>
    <%- include('../navigator/navigator') %>
    <h1>Updated Trailing FEE</h1>
    <p>
        <input type="file" name="file" id="file_upload" onchange="upload();"/>
        <br><br>
        <table>
          <thead>
              <tr>
                  <th>No.</th>
                  <th>IC</th>
                  <th>ชื่อ</th>
                  <th>WCC</th>
                  <th>RM</th>
                  <th>at month</th>
              </tr>
          </thead>
          <tbody id="data-table">
              <!-- Rows will be added here by JavaScript -->
          </tbody>
        </table>
        <br><br>
        <div>
          Display Date: <input type="text" name="st_date" value="" id="st_date"/>
        </div>
        <br>
        <input type="submit" value="Upload" onClick="sendData();"/>
    </p>
    
  </body>
</html>